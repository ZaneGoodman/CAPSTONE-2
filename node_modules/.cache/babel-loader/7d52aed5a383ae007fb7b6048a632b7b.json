{"ast":null,"code":"var _jsxFileName = \"/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/forms/AuthForm.js\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n/**Login user */\n\nconst AuthForm = props => {\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().max(25, \"Must be 25 Characters or less\").required(\"Required\"),\n      password: Yup.string().required(\"Required\")\n    }),\n    onSubmit: async values => {\n      const log = await props.login(values);\n      if (log === \"invalid\") {\n        console.log(formik.errors.username);\n        formik.errors.username.append(\"invalid username/password\");\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: formik.handleChange,\n    type: \"text\",\n    autoComplete: \"username\",\n    placeholder: \"username\",\n    id: \"username\",\n    name: \"username\",\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), formik.touched.username && formik.errors.username ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, formik.errors.username) : null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: formik.handleChange,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    placeholder: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, formik.errors.password) : null, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Go!\")));\n};\nexport default AuthForm;","map":{"version":3,"names":["React","useState","useFormik","Yup","AuthForm","props","formik","initialValues","username","password","validationSchema","object","string","max","required","onSubmit","values","log","login","console","errors","append","createElement","Fragment","handleSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","handleChange","type","autoComplete","placeholder","id","name","onBlur","handleBlur","value","touched"],"sources":["/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/forms/AuthForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n/**Login user */\n\nconst AuthForm = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      username: Yup.string()\n        .max(25, \"Must be 25 Characters or less\")\n        .required(\"Required\"),\n      password: Yup.string().required(\"Required\"),\n    }),\n    onSubmit: async (values) => {\n      const log = await props.login(values);\n      if (log === \"invalid\") {\n        console.log(formik.errors.username);\n        formik.errors.username.append(\"invalid username/password\");\n      }\n    },\n  });\n\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          onChange={formik.handleChange}\n          type=\"text\"\n          autoComplete=\"username\"\n          placeholder=\"username\"\n          id=\"username\"\n          name=\"username\"\n          onBlur={formik.handleBlur}\n          value={formik.values.username}\n        />\n        {formik.touched.username && formik.errors.username ? (\n          <p>{formik.errors.username}</p>\n        ) : null}\n        <label>Password</label>\n        <input\n          onChange={formik.handleChange}\n          type=\"password\"\n          autoComplete=\"current-password\"\n          placeholder=\"password\"\n          id=\"password\"\n          name=\"password\"\n          onBlur={formik.handleBlur}\n          value={formik.values.password}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <p>{formik.errors.password}</p>\n        ) : null}\n        <button>Go!</button>\n      </form>\n    </>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}