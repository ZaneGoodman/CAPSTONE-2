{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3001\";\nclass Notes {\n  static async addNotes(username, notes, has_prayed, date, season) {\n    try {\n      const res = await axios.post(`${API_BASE_URL}/rosary/notes`, {\n        username,\n        notes,\n        has_prayed,\n        date,\n        season\n      });\n      return res.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllNotes(username) {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/rosary/notes`, {\n        username\n      });\n      return res.data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n  static async checkDateExists(username, date) {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/rosary/notes/check_date`, {\n        username,\n        date\n      });\n      return res.data.dateExists;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\nexport default Notes;","map":{"version":3,"names":["axios","API_BASE_URL","Notes","addNotes","username","notes","has_prayed","date","season","res","post","data","err","getAllNotes","get","Error","checkDateExists","dateExists"],"sources":["/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/models/notes.js"],"sourcesContent":["import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3001\";\n\nclass Notes {\n  static async addNotes(username, notes, has_prayed, date, season) {\n    try {\n      const res = await axios.post(`${API_BASE_URL}/rosary/notes`, {\n        username,\n        notes,\n        has_prayed,\n        date,\n        season,\n      });\n\n      return res.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllNotes(username) {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/rosary/notes`, {\n        username,\n      });\n\n      return res.data;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  static async checkDateExists(username, date) {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/rosary/notes/check_date`, {\n        username,\n        date,\n      });\n\n      return res.data.dateExists;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\nexport default Notes;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,KAAK,CAAC;EACV,aAAaC,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAEC,MAAM,EAAE;IAC/D,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAE,GAAET,YAAa,eAAc,EAAE;QAC3DG,QAAQ;QACRC,KAAK;QACLC,UAAU;QACVC,IAAI;QACJC;MACF,CAAC,CAAC;MAEF,OAAOC,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF;EACA,aAAaC,WAAWA,CAACT,QAAQ,EAAE;IACjC,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMT,KAAK,CAACc,GAAG,CAAE,GAAEb,YAAa,eAAc,EAAE;QAC1DG;MACF,CAAC,CAAC;MAEF,OAAOK,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAM,IAAIG,KAAK,CAACH,GAAG,CAAC;IACtB;EACF;EAEA,aAAaI,eAAeA,CAACZ,QAAQ,EAAEG,IAAI,EAAE;IAC3C,IAAI;MACF,MAAME,GAAG,GAAG,MAAMT,KAAK,CAACc,GAAG,CAAE,GAAEb,YAAa,0BAAyB,EAAE;QACrEG,QAAQ;QACRG;MACF,CAAC,CAAC;MAEF,OAAOE,GAAG,CAACE,IAAI,CAACM,UAAU;IAC5B,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZ,MAAM,IAAIG,KAAK,CAACH,GAAG,CAAC;IACtB;EACF;AACF;AAEA,eAAeV,KAAK"},"metadata":{},"sourceType":"module"}