{"ast":null,"code":"var _jsxFileName = \"/home/zanegoodman/Springboard/Section_44_ReactJS_Fundamentals/44.9_react_effects_Refs/deckOfCards_exercise/src/DeckOfCards.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nfunction DeckOfCards() {\n  const [cardImgSrc, setCardImgSrc] = useState(\"\");\n  const [cardCount, setCardCount] = useState(0);\n  const [autoDraw, setAutoDraw] = useState(false);\n  const [remaing, setRemaining] = useState(\"\");\n  const deckId = useRef();\n  const intervalId = useRef(null);\n  useEffect(() => {\n    axios.get(\"https://deckofcardsapi.com/api/deck/new/shuffle/\").then(res => deckId.current = res.data.deck_id);\n  }, []);\n  const toggleAutoDraw = () => {\n    setAutoDraw(auto => !auto);\n  };\n  useEffect(() => {\n    async function getCard() {\n      if (remaing === 0) {\n        clearInterval(intervalId);\n        alert(\"No cards remaining!\");\n      } else {\n        const res = await axios.get(`https://deckofcardsapi.com/api/deck/${deckId.current}/draw/`);\n        setRemaining(_remaing => _remaing = res.data.remaining);\n        setCardCount(count => count + 1);\n        setCardImgSrc(_src => _src = res.data.cards[0].image);\n      }\n    }\n    if (autoDraw && !intervalId.current) {\n      intervalId.current = setInterval(async () => {\n        await getCard();\n      }, 1000);\n    }\n    return () => {\n      clearInterval(intervalId.current);\n      intervalId.current = null;\n    };\n  }, [autoDraw, setAutoDraw, remaing]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleAutoDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, autoDraw ? \"STOP\" : \"KEEP\", \" DRAWING FOR ME!\"), /*#__PURE__*/React.createElement(Card, {\n    src: cardImgSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}\nexport default DeckOfCards;\n// https://deckofcardsapi.com/api/deck/new/shuffle/ - get a deck\n// https://deckofcardsapi.com/api/deck/<<deck_id>>/draw/ - draw a card","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","axios","DeckOfCards","cardImgSrc","setCardImgSrc","cardCount","setCardCount","autoDraw","setAutoDraw","remaing","setRemaining","deckId","intervalId","get","then","res","current","data","deck_id","toggleAutoDraw","auto","getCard","clearInterval","alert","_remaing","remaining","count","_src","cards","image","setInterval","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src"],"sources":["/home/zanegoodman/Springboard/Section_44_ReactJS_Fundamentals/44.9_react_effects_Refs/deckOfCards_exercise/src/DeckOfCards.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\n\nfunction DeckOfCards() {\n  const [cardImgSrc, setCardImgSrc] = useState(\"\");\n  const [cardCount, setCardCount] = useState(0);\n  const [autoDraw, setAutoDraw] = useState(false);\n  const [remaing, setRemaining] = useState(\"\");\n\n  const deckId = useRef();\n  const intervalId = useRef(null);\n\n  useEffect(() => {\n    axios\n      .get(\"https://deckofcardsapi.com/api/deck/new/shuffle/\")\n      .then((res) => (deckId.current = res.data.deck_id));\n  }, []);\n  const toggleAutoDraw = () => {\n    setAutoDraw((auto) => !auto);\n  };\n\n  useEffect(() => {\n    async function getCard() {\n      if (remaing === 0) {\n        clearInterval(intervalId);\n        alert(\"No cards remaining!\");\n      } else {\n        const res = await axios.get(\n          `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/`\n        );\n\n        setRemaining((_remaing) => (_remaing = res.data.remaining));\n        setCardCount((count) => count + 1);\n        setCardImgSrc((_src) => (_src = res.data.cards[0].image));\n      }\n    }\n    if (autoDraw && !intervalId.current) {\n      intervalId.current = setInterval(async () => {\n        await getCard();\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(intervalId.current);\n      intervalId.current = null;\n    };\n  }, [autoDraw, setAutoDraw, remaing]);\n\n  return (\n    <div>\n      <button onClick={toggleAutoDraw}>\n        {autoDraw ? \"STOP\" : \"KEEP\"} DRAWING FOR ME!\n      </button>\n      <Card src={cardImgSrc} />\n    </div>\n  );\n}\n\nexport default DeckOfCards;\n// https://deckofcardsapi.com/api/deck/new/shuffle/ - get a deck\n// https://deckofcardsapi.com/api/deck/<<deck_id>>/draw/ - draw a card\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,OAAO,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,MAAM,GAAGb,MAAM,CAAC,CAAC;EACvB,MAAMc,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACdE,KAAK,CACFY,GAAG,CAAC,kDAAkD,CAAC,CACvDC,IAAI,CAAEC,GAAG,IAAMJ,MAAM,CAACK,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACC,OAAQ,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BX,WAAW,CAAEY,IAAI,IAAK,CAACA,IAAI,CAAC;EAC9B,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,eAAesB,OAAOA,CAAA,EAAG;MACvB,IAAIZ,OAAO,KAAK,CAAC,EAAE;QACjBa,aAAa,CAACV,UAAU,CAAC;QACzBW,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,MAAM;QACL,MAAMR,GAAG,GAAG,MAAMd,KAAK,CAACY,GAAG,CACxB,uCAAsCF,MAAM,CAACK,OAAQ,QACxD,CAAC;QAEDN,YAAY,CAAEc,QAAQ,IAAMA,QAAQ,GAAGT,GAAG,CAACE,IAAI,CAACQ,SAAU,CAAC;QAC3DnB,YAAY,CAAEoB,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;QAClCtB,aAAa,CAAEuB,IAAI,IAAMA,IAAI,GAAGZ,GAAG,CAACE,IAAI,CAACW,KAAK,CAAC,CAAC,CAAC,CAACC,KAAM,CAAC;MAC3D;IACF;IACA,IAAItB,QAAQ,IAAI,CAACK,UAAU,CAACI,OAAO,EAAE;MACnCJ,UAAU,CAACI,OAAO,GAAGc,WAAW,CAAC,YAAY;QAC3C,MAAMT,OAAO,CAAC,CAAC;MACjB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,OAAO,MAAM;MACXC,aAAa,CAACV,UAAU,CAACI,OAAO,CAAC;MACjCJ,UAAU,CAACI,OAAO,GAAG,IAAI;IAC3B,CAAC;EACH,CAAC,EAAE,CAACT,QAAQ,EAAEC,WAAW,EAAEC,OAAO,CAAC,CAAC;EAEpC,oBACEb,KAAA,CAAAmC,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEzC,KAAA,CAAAmC,aAAA;IAAQO,OAAO,EAAEnB,cAAe;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7B9B,QAAQ,GAAG,MAAM,GAAG,MAAM,EAAC,kBACtB,CAAC,eACTX,KAAA,CAAAmC,aAAA,CAAC/B,IAAI;IAACuC,GAAG,EAAEpC,UAAW;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACrB,CAAC;AAEV;AAEA,eAAenC,WAAW;AAC1B;AACA"},"metadata":{},"sourceType":"module"}