{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3001\";\nclass Authorization {\n  /**Login method - by passing in a username and password that already exist the back-end server will return a bcrypt athenticated token */\n  static async login(username, password) {\n    try {\n      const res = await axios.post(\"http://localhost:3001/auth/token\", {\n        username,\n        password\n      });\n      return res.data.token;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n  static async signup(username, password) {\n    /**signup method - By passing in a new username and a password, it will return a bcrypt athenticated token from the back-end server. Usernames cannot be duplicated */\n    try {\n      const res = await axios.post(`${API_BASE_URL}/auth/register`, {\n        username,\n        password\n      });\n      return res.data.token;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\nexport default Authorization;","map":{"version":3,"names":["axios","API_BASE_URL","Authorization","login","username","password","res","post","data","token","err","Error","signup"],"sources":["/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/models/authUser.js"],"sourcesContent":["import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:3001\";\n\nclass Authorization {\n  /**Login method - by passing in a username and password that already exist the back-end server will return a bcrypt athenticated token */\n  static async login(username, password) {\n    try {\n      const res = await axios.post(\"http://localhost:3001/auth/token\", {\n        username,\n        password,\n      });\n\n      return res.data.token;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n  static async signup(username, password) {\n    /**signup method - By passing in a new username and a password, it will return a bcrypt athenticated token from the back-end server. Usernames cannot be duplicated */\n    try {\n      const res = await axios.post(`${API_BASE_URL}/auth/register`, {\n        username,\n        password,\n      });\n\n      return res.data.token;\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n}\n\nexport default Authorization;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,aAAa,CAAC;EAClB;EACA,aAAaC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACrC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,kCAAkC,EAAE;QAC/DH,QAAQ;QACRC;MACF,CAAC,CAAC;MAEF,OAAOC,GAAG,CAACE,IAAI,CAACC,KAAK;IACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACtB;EACF;EACA,aAAaE,MAAMA,CAACR,QAAQ,EAAEC,QAAQ,EAAE;IACtC;IACA,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAE,GAAEN,YAAa,gBAAe,EAAE;QAC5DG,QAAQ;QACRC;MACF,CAAC,CAAC;MAEF,OAAOC,GAAG,CAACE,IAAI,CAACC,KAAK;IACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAM,IAAIC,KAAK,CAACD,GAAG,CAAC;IACtB;EACF;AACF;AAEA,eAAeR,aAAa"},"metadata":{},"sourceType":"module"}