{"ast":null,"code":"var _jsxFileName = \"/home/zanegoodman/Springboard/Section_44_ReactJS_Fundamentals/44.9_react_effects_Refs/deckOfCards_exercise/src/DeckOfCards.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nfunction DeckOfCards() {\n  const [cardImgSrc, setCardImgSrc] = useState(\"\");\n  const [cardCount, setCardCount] = useState(0);\n  const [startAndStop, setStartAndStop] = useState(\"stop\");\n  const deckId = useRef();\n  const intervalId = useRef();\n  const btn = useRef();\n  useEffect(() => {\n    axios.get(\"https://deckofcardsapi.com/api/deck/new/shuffle/\").then(res => deckId.current = res.data.deck_id);\n  }, []);\n  const handleClick = () => {\n    startAndStop === \"stop\" ? setStartAndStop(() => \"start\") : setStartAndStop(() => \"stop\") && clearInterval(intervalId);\n  };\n  useEffect(() => {\n    intervalId.current = setInterval(getCard, 1000);\n  }, [startAndStop]);\n  const getCard = async () => {\n    if (cardCount === 52) {\n      clearInterval(intervalId);\n      alert(\"No cards remaining!\");\n    } else {\n      const res = await axios.get(`https://deckofcardsapi.com/api/deck/${deckId.current}/draw/`);\n      setCardCount(() => cardCount + 1);\n      setCardImgSrc(() => res.data.cards[0].image);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    ref: btn,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, startAndStop), /*#__PURE__*/React.createElement(Card, {\n    src: cardImgSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\nexport default DeckOfCards;\n// https://deckofcardsapi.com/api/deck/new/shuffle/ - get a deck\n// https://deckofcardsapi.com/api/deck/<<deck_id>>/draw/ - draw a card","map":{"version":3,"names":["React","useState","useRef","useEffect","Card","axios","DeckOfCards","cardImgSrc","setCardImgSrc","cardCount","setCardCount","startAndStop","setStartAndStop","deckId","intervalId","btn","get","then","res","current","data","deck_id","handleClick","clearInterval","setInterval","getCard","alert","cards","image","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","src"],"sources":["/home/zanegoodman/Springboard/Section_44_ReactJS_Fundamentals/44.9_react_effects_Refs/deckOfCards_exercise/src/DeckOfCards.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\n\nfunction DeckOfCards() {\n  const [cardImgSrc, setCardImgSrc] = useState(\"\");\n  const [cardCount, setCardCount] = useState(0);\n  const [startAndStop, setStartAndStop] = useState(\"stop\");\n\n  const deckId = useRef();\n  const intervalId = useRef();\n  const btn = useRef();\n  useEffect(() => {\n    axios\n      .get(\"https://deckofcardsapi.com/api/deck/new/shuffle/\")\n      .then((res) => (deckId.current = res.data.deck_id));\n  }, []);\n  const handleClick = () => {\n    startAndStop === \"stop\"\n      ? setStartAndStop(() => \"start\")\n      : setStartAndStop(() => \"stop\") && clearInterval(intervalId);\n  };\n\n  useEffect(() => {\n    intervalId.current = setInterval(getCard, 1000);\n  }, [startAndStop]);\n\n  const getCard = async () => {\n    if (cardCount === 52) {\n      clearInterval(intervalId);\n      alert(\"No cards remaining!\");\n    } else {\n      const res = await axios.get(\n        `https://deckofcardsapi.com/api/deck/${deckId.current}/draw/`\n      );\n      setCardCount(() => cardCount + 1);\n      setCardImgSrc(() => res.data.cards[0].image);\n    }\n  };\n\n  return (\n    <div>\n      <button ref={btn} onClick={handleClick}>\n        {startAndStop}\n      </button>\n      <Card src={cardImgSrc} />\n    </div>\n  );\n}\n\nexport default DeckOfCards;\n// https://deckofcardsapi.com/api/deck/new/shuffle/ - get a deck\n// https://deckofcardsapi.com/api/deck/<<deck_id>>/draw/ - draw a card\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMY,MAAM,GAAGX,MAAM,CAAC,CAAC;EACvB,MAAMY,UAAU,GAAGZ,MAAM,CAAC,CAAC;EAC3B,MAAMa,GAAG,GAAGb,MAAM,CAAC,CAAC;EACpBC,SAAS,CAAC,MAAM;IACdE,KAAK,CACFW,GAAG,CAAC,kDAAkD,CAAC,CACvDC,IAAI,CAAEC,GAAG,IAAML,MAAM,CAACM,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACC,OAAQ,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBX,YAAY,KAAK,MAAM,GACnBC,eAAe,CAAC,MAAM,OAAO,CAAC,GAC9BA,eAAe,CAAC,MAAM,MAAM,CAAC,IAAIW,aAAa,CAACT,UAAU,CAAC;EAChE,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdW,UAAU,CAACK,OAAO,GAAGK,WAAW,CAACC,OAAO,EAAE,IAAI,CAAC;EACjD,CAAC,EAAE,CAACd,YAAY,CAAC,CAAC;EAElB,MAAMc,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIhB,SAAS,KAAK,EAAE,EAAE;MACpBc,aAAa,CAACT,UAAU,CAAC;MACzBY,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,MAAM;MACL,MAAMR,GAAG,GAAG,MAAMb,KAAK,CAACW,GAAG,CACxB,uCAAsCH,MAAM,CAACM,OAAQ,QACxD,CAAC;MACDT,YAAY,CAAC,MAAMD,SAAS,GAAG,CAAC,CAAC;MACjCD,aAAa,CAAC,MAAMU,GAAG,CAACE,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACE5B,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnC,KAAA,CAAA6B,aAAA;IAAQO,GAAG,EAAErB,GAAI;IAACsB,OAAO,EAAEf,WAAY;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpCxB,YACK,CAAC,eACTX,KAAA,CAAA6B,aAAA,CAACzB,IAAI;IAACkC,GAAG,EAAE/B,UAAW;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACrB,CAAC;AAEV;AAEA,eAAe7B,WAAW;AAC1B;AACA"},"metadata":{},"sourceType":"module"}