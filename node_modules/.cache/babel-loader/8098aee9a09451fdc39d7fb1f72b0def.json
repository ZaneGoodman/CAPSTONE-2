{"ast":null,"code":"\"use strict\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nconst express = require('express');\nconst _ = require('lodash');\nconst pluralize = require('pluralize');\nconst write = require('./write');\nconst getFullURL = require('./get-full-url');\nconst utils = require('../utils');\nconst delay = require('./delay');\nmodule.exports = (db, name, opts) => {\n  // Create router\n  const router = express.Router();\n  router.use(delay); // Embed function used in GET /name and GET /name/id\n\n  function embed(resource, e) {\n    e && [].concat(e).forEach(externalResource => {\n      if (db.get(externalResource).value) {\n        const query = {};\n        const singularResource = pluralize.singular(name);\n        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;\n        resource[externalResource] = db.get(externalResource).filter(query).value();\n      }\n    });\n  } // Expand function used in GET /name and GET /name/id\n\n  function expand(resource, e) {\n    e && [].concat(e).forEach(innerResource => {\n      const plural = pluralize(innerResource);\n      if (db.get(plural).value()) {\n        const prop = `${innerResource}${opts.foreignKeySuffix}`;\n        resource[innerResource] = db.get(plural).getById(resource[prop]).value();\n      }\n    });\n  } // GET /name\n  // GET /name?q=\n  // GET /name?attr=&attr=\n  // GET /name?_end=&\n  // GET /name?_start=&_end=&\n  // GET /name?_embed=&_expand=\n\n  function list(req, res, next) {\n    // Resource chain\n    let chain = db.get(name); // Remove q, _start, _end, ... from req.query to avoid filtering using those\n    // parameters\n\n    let q = req.query.q;\n    let _start = req.query._start;\n    let _end = req.query._end;\n    let _page = req.query._page;\n    let _sort = req.query._sort;\n    let _order = req.query._order;\n    let _limit = req.query._limit;\n    let _embed = req.query._embed;\n    let _expand = req.query._expand;\n    delete req.query.q;\n    delete req.query._start;\n    delete req.query._end;\n    delete req.query._sort;\n    delete req.query._order;\n    delete req.query._limit;\n    delete req.query._embed;\n    delete req.query._expand; // Automatically delete query parameters that can't be found\n    // in the database\n\n    Object.keys(req.query).forEach(query => {\n      const arr = db.get(name).value();\n      for (let i in arr) {\n        if (_.has(arr[i], query) || query === 'callback' || query === '_' || /_lte$/.test(query) || /_gte$/.test(query) || /_ne$/.test(query) || /_like$/.test(query)) return;\n      }\n      delete req.query[query];\n    });\n    if (q) {\n      // Full-text search\n      if (Array.isArray(q)) {\n        q = q[0];\n      }\n      q = q.toLowerCase();\n      chain = chain.filter(obj => {\n        for (let key in obj) {\n          const value = obj[key];\n          if (db._.deepQuery(value, q)) {\n            return true;\n          }\n        }\n      });\n    }\n    Object.keys(req.query).forEach(key => {\n      // Don't take into account JSONP query parameters\n      // jQuery adds a '_' query parameter too\n      if (key !== 'callback' && key !== '_') {\n        // Always use an array, in case req.query is an array\n        const arr = [].concat(req.query[key]);\n        chain = chain.filter(element => {\n          return arr.map(function (value) {\n            const isDifferent = /_ne$/.test(key);\n            const isRange = /_lte$/.test(key) || /_gte$/.test(key);\n            const isLike = /_like$/.test(key);\n            const path = key.replace(/(_lte|_gte|_ne|_like)$/, ''); // get item value based on path\n            // i.e post.title -> 'foo'\n\n            const elementValue = _.get(element, path); // Prevent toString() failing on undefined or null values\n\n            if (elementValue === undefined || elementValue === null) {\n              return;\n            }\n            if (isRange) {\n              const isLowerThan = /_gte$/.test(key);\n              return isLowerThan ? value <= elementValue : value >= elementValue;\n            } else if (isDifferent) {\n              return value !== elementValue.toString();\n            } else if (isLike) {\n              return new RegExp(value, 'i').test(elementValue.toString());\n            } else {\n              return value === elementValue.toString();\n            }\n          }).reduce((a, b) => a || b);\n        });\n      }\n    }); // Sort\n\n    if (_sort) {\n      const _sortSet = _sort.split(',');\n      const _orderSet = (_order || '').split(',').map(s => s.toLowerCase());\n      chain = chain.orderBy(_sortSet, _orderSet);\n    } // Slice result\n\n    if (_end || _limit || _page) {\n      res.setHeader('X-Total-Count', chain.size());\n      res.setHeader('Access-Control-Expose-Headers', `X-Total-Count${_page ? ', Link' : ''}`);\n    }\n    if (_page) {\n      _page = parseInt(_page, 10);\n      _page = _page >= 1 ? _page : 1;\n      _limit = parseInt(_limit, 10) || 10;\n      const page = utils.getPage(chain.value(), _page, _limit);\n      const links = {};\n      const fullURL = getFullURL(req);\n      if (page.first) {\n        links.first = fullURL.replace(`page=${page.current}`, `page=${page.first}`);\n      }\n      if (page.prev) {\n        links.prev = fullURL.replace(`page=${page.current}`, `page=${page.prev}`);\n      }\n      if (page.next) {\n        links.next = fullURL.replace(`page=${page.current}`, `page=${page.next}`);\n      }\n      if (page.last) {\n        links.last = fullURL.replace(`page=${page.current}`, `page=${page.last}`);\n      }\n      res.links(links);\n      chain = _.chain(page.items);\n    } else if (_end) {\n      _start = parseInt(_start, 10) || 0;\n      _end = parseInt(_end, 10);\n      chain = chain.slice(_start, _end);\n    } else if (_limit) {\n      _start = parseInt(_start, 10) || 0;\n      _limit = parseInt(_limit, 10);\n      chain = chain.slice(_start, _start + _limit);\n    } // embed and expand\n\n    chain = chain.cloneDeep().forEach(function (element) {\n      embed(element, _embed);\n      expand(element, _expand);\n    });\n    res.locals.data = chain.value();\n    next();\n  } // GET /name/:id\n  // GET /name/:id?_embed=&_expand\n\n  function show(req, res, next) {\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    const resource = db.get(name).getById(req.params.id).value();\n    if (resource) {\n      // Clone resource to avoid making changes to the underlying object\n      const clone = _.cloneDeep(resource); // Embed other resources based on resource id\n      // /posts/1?_embed=comments\n\n      embed(clone, _embed); // Expand inner resources based on id\n      // /posts/1?_expand=user\n\n      expand(clone, _expand);\n      res.locals.data = clone;\n    }\n    next();\n  } // POST /name\n\n  function create(req, res, next) {\n    let resource;\n    if (opts._isFake) {\n      const id = db.get(name).createId().value();\n      resource = _objectSpread({}, req.body, {\n        id\n      });\n    } else {\n      resource = db.get(name).insert(req.body).value();\n    }\n    res.setHeader('Access-Control-Expose-Headers', 'Location');\n    res.location(`${getFullURL(req)}/${resource.id}`);\n    res.status(201);\n    res.locals.data = resource;\n    next();\n  } // PUT /name/:id\n  // PATCH /name/:id\n\n  function update(req, res, next) {\n    const id = req.params.id;\n    let resource;\n    if (opts._isFake) {\n      resource = db.get(name).getById(id).value();\n      if (req.method === 'PATCH') {\n        resource = _objectSpread({}, resource, req.body);\n      } else {\n        resource = _objectSpread({}, req.body, {\n          id: resource.id\n        });\n      }\n    } else {\n      let chain = db.get(name);\n      chain = req.method === 'PATCH' ? chain.updateById(id, req.body) : chain.replaceById(id, req.body);\n      resource = chain.value();\n    }\n    if (resource) {\n      res.locals.data = resource;\n    }\n    next();\n  } // DELETE /name/:id\n\n  function destroy(req, res, next) {\n    let resource;\n    if (opts._isFake) {\n      resource = db.get(name).value();\n    } else {\n      resource = db.get(name).removeById(req.params.id).value(); // Remove dependents documents\n\n      const removable = db._.getRemovable(db.getState(), opts);\n      removable.forEach(item => {\n        db.get(item.name).removeById(item.id).value();\n      });\n    }\n    if (resource) {\n      res.locals.data = {};\n    }\n    next();\n  }\n  const w = write(db);\n  router.route('/').get(list).post(create, w);\n  router.route('/:id').get(show).put(update, w).patch(update, w).delete(destroy, w);\n  return router;\n};","map":{"version":3,"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","express","require","_","pluralize","write","getFullURL","utils","delay","module","exports","db","name","opts","router","Router","use","embed","resource","e","externalResource","get","query","singularResource","singular","foreignKeySuffix","id","expand","innerResource","plural","prop","getById","list","req","res","next","chain","q","_start","_end","_page","_sort","_order","_limit","_embed","_expand","arr","has","test","Array","isArray","toLowerCase","deepQuery","element","map","isDifferent","isRange","isLike","path","replace","elementValue","undefined","isLowerThan","toString","RegExp","reduce","a","b","_sortSet","split","_orderSet","s","orderBy","setHeader","size","parseInt","page","getPage","links","fullURL","first","current","prev","last","items","slice","cloneDeep","locals","data","show","params","clone","create","_isFake","createId","body","insert","location","status","update","method","updateById","replaceById","destroy","removeById","removable","getRemovable","getState","item","w","route","post","put","patch","delete"],"sources":["/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/node_modules/json-server/lib/server/router/plural.js"],"sourcesContent":["\"use strict\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst express = require('express');\n\nconst _ = require('lodash');\n\nconst pluralize = require('pluralize');\n\nconst write = require('./write');\n\nconst getFullURL = require('./get-full-url');\n\nconst utils = require('../utils');\n\nconst delay = require('./delay');\n\nmodule.exports = (db, name, opts) => {\n  // Create router\n  const router = express.Router();\n  router.use(delay); // Embed function used in GET /name and GET /name/id\n\n  function embed(resource, e) {\n    e && [].concat(e).forEach(externalResource => {\n      if (db.get(externalResource).value) {\n        const query = {};\n        const singularResource = pluralize.singular(name);\n        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;\n        resource[externalResource] = db.get(externalResource).filter(query).value();\n      }\n    });\n  } // Expand function used in GET /name and GET /name/id\n\n\n  function expand(resource, e) {\n    e && [].concat(e).forEach(innerResource => {\n      const plural = pluralize(innerResource);\n\n      if (db.get(plural).value()) {\n        const prop = `${innerResource}${opts.foreignKeySuffix}`;\n        resource[innerResource] = db.get(plural).getById(resource[prop]).value();\n      }\n    });\n  } // GET /name\n  // GET /name?q=\n  // GET /name?attr=&attr=\n  // GET /name?_end=&\n  // GET /name?_start=&_end=&\n  // GET /name?_embed=&_expand=\n\n\n  function list(req, res, next) {\n    // Resource chain\n    let chain = db.get(name); // Remove q, _start, _end, ... from req.query to avoid filtering using those\n    // parameters\n\n    let q = req.query.q;\n    let _start = req.query._start;\n    let _end = req.query._end;\n    let _page = req.query._page;\n    let _sort = req.query._sort;\n    let _order = req.query._order;\n    let _limit = req.query._limit;\n    let _embed = req.query._embed;\n    let _expand = req.query._expand;\n    delete req.query.q;\n    delete req.query._start;\n    delete req.query._end;\n    delete req.query._sort;\n    delete req.query._order;\n    delete req.query._limit;\n    delete req.query._embed;\n    delete req.query._expand; // Automatically delete query parameters that can't be found\n    // in the database\n\n    Object.keys(req.query).forEach(query => {\n      const arr = db.get(name).value();\n\n      for (let i in arr) {\n        if (_.has(arr[i], query) || query === 'callback' || query === '_' || /_lte$/.test(query) || /_gte$/.test(query) || /_ne$/.test(query) || /_like$/.test(query)) return;\n      }\n\n      delete req.query[query];\n    });\n\n    if (q) {\n      // Full-text search\n      if (Array.isArray(q)) {\n        q = q[0];\n      }\n\n      q = q.toLowerCase();\n      chain = chain.filter(obj => {\n        for (let key in obj) {\n          const value = obj[key];\n\n          if (db._.deepQuery(value, q)) {\n            return true;\n          }\n        }\n      });\n    }\n\n    Object.keys(req.query).forEach(key => {\n      // Don't take into account JSONP query parameters\n      // jQuery adds a '_' query parameter too\n      if (key !== 'callback' && key !== '_') {\n        // Always use an array, in case req.query is an array\n        const arr = [].concat(req.query[key]);\n        chain = chain.filter(element => {\n          return arr.map(function (value) {\n            const isDifferent = /_ne$/.test(key);\n            const isRange = /_lte$/.test(key) || /_gte$/.test(key);\n            const isLike = /_like$/.test(key);\n            const path = key.replace(/(_lte|_gte|_ne|_like)$/, ''); // get item value based on path\n            // i.e post.title -> 'foo'\n\n            const elementValue = _.get(element, path); // Prevent toString() failing on undefined or null values\n\n\n            if (elementValue === undefined || elementValue === null) {\n              return;\n            }\n\n            if (isRange) {\n              const isLowerThan = /_gte$/.test(key);\n              return isLowerThan ? value <= elementValue : value >= elementValue;\n            } else if (isDifferent) {\n              return value !== elementValue.toString();\n            } else if (isLike) {\n              return new RegExp(value, 'i').test(elementValue.toString());\n            } else {\n              return value === elementValue.toString();\n            }\n          }).reduce((a, b) => a || b);\n        });\n      }\n    }); // Sort\n\n    if (_sort) {\n      const _sortSet = _sort.split(',');\n\n      const _orderSet = (_order || '').split(',').map(s => s.toLowerCase());\n\n      chain = chain.orderBy(_sortSet, _orderSet);\n    } // Slice result\n\n\n    if (_end || _limit || _page) {\n      res.setHeader('X-Total-Count', chain.size());\n      res.setHeader('Access-Control-Expose-Headers', `X-Total-Count${_page ? ', Link' : ''}`);\n    }\n\n    if (_page) {\n      _page = parseInt(_page, 10);\n      _page = _page >= 1 ? _page : 1;\n      _limit = parseInt(_limit, 10) || 10;\n      const page = utils.getPage(chain.value(), _page, _limit);\n      const links = {};\n      const fullURL = getFullURL(req);\n\n      if (page.first) {\n        links.first = fullURL.replace(`page=${page.current}`, `page=${page.first}`);\n      }\n\n      if (page.prev) {\n        links.prev = fullURL.replace(`page=${page.current}`, `page=${page.prev}`);\n      }\n\n      if (page.next) {\n        links.next = fullURL.replace(`page=${page.current}`, `page=${page.next}`);\n      }\n\n      if (page.last) {\n        links.last = fullURL.replace(`page=${page.current}`, `page=${page.last}`);\n      }\n\n      res.links(links);\n      chain = _.chain(page.items);\n    } else if (_end) {\n      _start = parseInt(_start, 10) || 0;\n      _end = parseInt(_end, 10);\n      chain = chain.slice(_start, _end);\n    } else if (_limit) {\n      _start = parseInt(_start, 10) || 0;\n      _limit = parseInt(_limit, 10);\n      chain = chain.slice(_start, _start + _limit);\n    } // embed and expand\n\n\n    chain = chain.cloneDeep().forEach(function (element) {\n      embed(element, _embed);\n      expand(element, _expand);\n    });\n    res.locals.data = chain.value();\n    next();\n  } // GET /name/:id\n  // GET /name/:id?_embed=&_expand\n\n\n  function show(req, res, next) {\n    const _embed = req.query._embed;\n    const _expand = req.query._expand;\n    const resource = db.get(name).getById(req.params.id).value();\n\n    if (resource) {\n      // Clone resource to avoid making changes to the underlying object\n      const clone = _.cloneDeep(resource); // Embed other resources based on resource id\n      // /posts/1?_embed=comments\n\n\n      embed(clone, _embed); // Expand inner resources based on id\n      // /posts/1?_expand=user\n\n      expand(clone, _expand);\n      res.locals.data = clone;\n    }\n\n    next();\n  } // POST /name\n\n\n  function create(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      const id = db.get(name).createId().value();\n      resource = _objectSpread({}, req.body, {\n        id\n      });\n    } else {\n      resource = db.get(name).insert(req.body).value();\n    }\n\n    res.setHeader('Access-Control-Expose-Headers', 'Location');\n    res.location(`${getFullURL(req)}/${resource.id}`);\n    res.status(201);\n    res.locals.data = resource;\n    next();\n  } // PUT /name/:id\n  // PATCH /name/:id\n\n\n  function update(req, res, next) {\n    const id = req.params.id;\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).getById(id).value();\n\n      if (req.method === 'PATCH') {\n        resource = _objectSpread({}, resource, req.body);\n      } else {\n        resource = _objectSpread({}, req.body, {\n          id: resource.id\n        });\n      }\n    } else {\n      let chain = db.get(name);\n      chain = req.method === 'PATCH' ? chain.updateById(id, req.body) : chain.replaceById(id, req.body);\n      resource = chain.value();\n    }\n\n    if (resource) {\n      res.locals.data = resource;\n    }\n\n    next();\n  } // DELETE /name/:id\n\n\n  function destroy(req, res, next) {\n    let resource;\n\n    if (opts._isFake) {\n      resource = db.get(name).value();\n    } else {\n      resource = db.get(name).removeById(req.params.id).value(); // Remove dependents documents\n\n      const removable = db._.getRemovable(db.getState(), opts);\n\n      removable.forEach(item => {\n        db.get(item.name).removeById(item.id).value();\n      });\n    }\n\n    if (resource) {\n      res.locals.data = {};\n    }\n\n    next();\n  }\n\n  const w = write(db);\n  router.route('/').get(list).post(create, w);\n  router.route('/:id').get(show).put(update, w).patch(update, w).delete(destroy, w);\n  return router;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}