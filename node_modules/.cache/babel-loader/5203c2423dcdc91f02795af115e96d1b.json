{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"https://the-rosary-api.vercel.app\";\nconst CALENDAR_BASE_URL = \"http://calapi.inadiutorium.cz/api/v0/en/calendars/default\";\naxios.defaults.withCredentials = false;\nclass Rosary {\n  /**getByDay method - by passing in a weekday like 'tuesday' this method\n   * returns an object of rosary information.\n   */\n  static async getByDay(weekday) {\n    try {\n      const res = await axios.get(`${API_BASE_URL}/v1/${weekday.toLowerCase()}`);\n      return res;\n    } catch (error) {\n      throw error;\n    }\n  }\n  /**\n   * getByDate method - By passing in a date in '2023/05/05' format\n   * a Catholic Calendar API will return season information and use the\n   * weekday of that information to call getByDay method to get the\n   * correct rosary data for the passed in date.\n   */\n  static async getByDate(date) {\n    // YYYY/MM/DD\n    try {\n      const dateResponse = await axios.get(`${CALENDAR_BASE_URL}/${date}`);\n      const season = `Week ${dateResponse.data.season_week} of the ${dateResponse.data.season} season`;\n      const weekday = dateResponse.data.weekday;\n      const rosaryResponse = await this.getByDay(weekday);\n      return {\n        ...rosaryResponse,\n        season\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\nexport default Rosary;","map":{"version":3,"names":["axios","API_BASE_URL","CALENDAR_BASE_URL","defaults","withCredentials","Rosary","getByDay","weekday","res","get","toLowerCase","error","getByDate","date","dateResponse","season","data","season_week","rosaryResponse"],"sources":["/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/models/rosary.js"],"sourcesContent":["import axios from \"axios\";\nconst API_BASE_URL = \"https://the-rosary-api.vercel.app\";\nconst CALENDAR_BASE_URL =\n  \"http://calapi.inadiutorium.cz/api/v0/en/calendars/default\";\naxios.defaults.withCredentials = false;\n\nclass Rosary {\n  /**getByDay method - by passing in a weekday like 'tuesday' this method\n   * returns an object of rosary information.\n   */\n  static async getByDay(weekday) {\n    try {\n      const res = await axios.get(\n        `${API_BASE_URL}/v1/${weekday.toLowerCase()}`\n      );\n      return res;\n    } catch (error) {\n      throw error;\n    }\n  }\n  /**\n   * getByDate method - By passing in a date in '2023/05/05' format\n   * a Catholic Calendar API will return season information and use the\n   * weekday of that information to call getByDay method to get the\n   * correct rosary data for the passed in date.\n   */\n  static async getByDate(date) {\n    // YYYY/MM/DD\n    try {\n      const dateResponse = await axios.get(`${CALENDAR_BASE_URL}/${date}`);\n\n      const season = `Week ${dateResponse.data.season_week} of the ${dateResponse.data.season} season`;\n\n      const weekday = dateResponse.data.weekday;\n      const rosaryResponse = await this.getByDay(weekday);\n      return { ...rosaryResponse, season };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\nexport default Rosary;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG,mCAAmC;AACxD,MAAMC,iBAAiB,GACrB,2DAA2D;AAC7DF,KAAK,CAACG,QAAQ,CAACC,eAAe,GAAG,KAAK;AAEtC,MAAMC,MAAM,CAAC;EACX;AACF;AACA;EACE,aAAaC,QAAQA,CAACC,OAAO,EAAE;IAC7B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CACxB,GAAER,YAAa,OAAMM,OAAO,CAACG,WAAW,CAAC,CAAE,EAC9C,CAAC;MACD,OAAOF,GAAG;IACZ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;EACA;AACF;AACA;AACA;AACA;AACA;EACE,aAAaC,SAASA,CAACC,IAAI,EAAE;IAC3B;IACA,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMd,KAAK,CAACS,GAAG,CAAE,GAAEP,iBAAkB,IAAGW,IAAK,EAAC,CAAC;MAEpE,MAAME,MAAM,GAAI,QAAOD,YAAY,CAACE,IAAI,CAACC,WAAY,WAAUH,YAAY,CAACE,IAAI,CAACD,MAAO,SAAQ;MAEhG,MAAMR,OAAO,GAAGO,YAAY,CAACE,IAAI,CAACT,OAAO;MACzC,MAAMW,cAAc,GAAG,MAAM,IAAI,CAACZ,QAAQ,CAACC,OAAO,CAAC;MACnD,OAAO;QAAE,GAAGW,cAAc;QAAEH;MAAO,CAAC;IACtC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF;AACA,eAAeN,MAAM"},"metadata":{},"sourceType":"module"}