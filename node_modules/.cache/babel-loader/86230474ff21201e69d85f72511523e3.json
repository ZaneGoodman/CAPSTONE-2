{"ast":null,"code":"var _jsxFileName = \"/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/forms/AuthForm.js\";\nimport React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n/**Login user */\n\nconst AuthForm = props => {\n  const [valid, setValid] = useState(true);\n  const checkLogin = async values => {\n    //Call login function, if it returns invalid show error message\n    if ((await props.login(values)) === \"invalid\") {\n      setValid(false);\n    } else {\n      await props.login(values);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().max(25, \"Must be 25 Characters or less\").required(\"Required\"),\n      password: Yup.string().required(\"Required\")\n    }),\n    onSubmit: values => {\n      checkLogin(values);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    style: {\n      width: \"500px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: formik.handleChange,\n    type: \"text\",\n    autoComplete: \"username\",\n    placeholder: \"username\",\n    id: \"username\",\n    name: \"username\",\n    onBlur: formik.handleBlur,\n    value: formik.values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), formik.touched.username && formik.errors.username ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, formik.errors.username) : null), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: formik.handleChange,\n    type: \"password\",\n    autoComplete: \"current-password\",\n    placeholder: \"password\",\n    id: \"password\",\n    name: \"password\",\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, formik.errors.password) : null, valid === false ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }\n  }, \"Invalid username/password\") : null), /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Go!\")));\n};\nexport default AuthForm;","map":{"version":3,"names":["React","useState","useFormik","Yup","Form","Button","AuthForm","props","valid","setValid","checkLogin","values","login","formik","initialValues","username","password","validationSchema","object","string","max","required","onSubmit","createElement","Fragment","handleSubmit","style","width","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","className","Label","htmlFor","Control","onChange","handleChange","type","autoComplete","placeholder","id","name","onBlur","handleBlur","value","touched","errors","variant"],"sources":["/home/zanegoodman/Springboard/CAPSTONES/CAPSTONE_2/src/forms/AuthForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n/**Login user */\n\nconst AuthForm = (props) => {\n  const [valid, setValid] = useState(true);\n  const checkLogin = async (values) => {\n    //Call login function, if it returns invalid show error message\n    if ((await props.login(values)) === \"invalid\") {\n      setValid(false);\n    } else {\n      await props.login(values);\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      username: Yup.string()\n        .max(25, \"Must be 25 Characters or less\")\n        .required(\"Required\"),\n      password: Yup.string().required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      checkLogin(values);\n    },\n  });\n\n  return (\n    <>\n      <Form onSubmit={formik.handleSubmit} style={{ width: \"500px\" }}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            onChange={formik.handleChange}\n            type=\"text\"\n            autoComplete=\"username\"\n            placeholder=\"username\"\n            id=\"username\"\n            name=\"username\"\n            onBlur={formik.handleBlur}\n            value={formik.values.username}\n          />\n          {formik.touched.username && formik.errors.username ? (\n            <p>{formik.errors.username}</p>\n          ) : null}\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <label>Password</label>\n          <Form.Control\n            onChange={formik.handleChange}\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"password\"\n            id=\"password\"\n            name=\"password\"\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <p>{formik.errors.password}</p>\n          ) : null}\n          {valid === false ? <p>Invalid username/password</p> : null}\n        </Form.Group>\n        <Button variant=\"dark\">Go!</Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}